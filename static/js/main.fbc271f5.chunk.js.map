{"version":3,"sources":["Components/Footer.js","Components/Header.js","Components/InputOutput.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","class","style","backgroundColor","color","href","Header","Card","textAlign","fontSize","fontFamily","fontWeight","InputOutput","props","useState","amount","setAmount","service","setService","customer","setCustomer","tip","setTip","totalCustomer","setTotalCustomer","tip1","setTip1","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","Row","Col","md","FloatingLabel","label","Select","Button","variant","width","onClick","AddCustomerName","AddTip","customername","map","ele","Alert","Heading","totaltip","reduce","prev","next","length","Table","striped","bordered","hover","App","setCustomerName","link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbc271f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n           \r\n<footer class=\"page-footer font-small\" style={{backgroundColor:\"black\",color:\"white\"}}>\r\n\r\n  \r\n  <div class=\"footer-copyright text-center py-3\">Â© 2021 Copyright:\r\n    <a href=\"#\"> SujitTechnoo.com</a>\r\n  </div>\r\n  \r\n\r\n</footer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header style={{textAlign:\"center\", fontSize:\"30px\",fontFamily:\"Times New Roman', Times, serif\",fontWeight:\"bolder\" , backgroundColor:\"black\",color:\"white\"}}>TipCalculator<br></br><p style={{fontSize:\"20px\"}}>Build In REACT</p></Card.Header>\r\n            </Card>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport { Form, Row, Col, FloatingLabel, Button, Card, Table , Alert } from 'react-bootstrap';\r\n\r\nfunction InputOutput(props) {\r\n\r\n    const [amount, setAmount] = useState(0)\r\n    const [service, setService] = useState(0)\r\n    const [customer, setCustomer] = useState(\"\")\r\n    const [tip, setTip] = useState([])\r\n    const [totalCustomer, setTotalCustomer] = useState(0)\r\n    const [tip1, setTip1] = useState([0])\r\n\r\n    const handler = (event) => {\r\n        setAmount(event.target.value)\r\n    }\r\n\r\n    const handler1 = (event) => {\r\n        setService(event.target.value)\r\n\r\n\r\n    }\r\n    const handler2 = (event) => {\r\n        setCustomer(event.target.value)\r\n\r\n        setTip(amount * service)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const getData = () => {\r\n\r\n        props.AddCustomerName(`${customer} Offering a Tip Of - Rs.  ${tip}`)\r\n        props.AddTip(tip)\r\n\r\n\r\n    }\r\n\r\n    const getData1 = () => {\r\n        setTip1(`${props.totaltip.reduce((prev, next) => prev + next)}`)\r\n        setTotalCustomer(`${props.customername.length}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\".bg-light\">\r\n                <div>\r\n                <Form className=\"container\" >\r\n                    <Form.Group className=\"container mb-3\" controlId=\"formBillAmount\">\r\n                        <Form.Label>Enter Bill Amount</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Bill Amount\" onChange={handler} />\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <hr style={{ color: \"black\" }}></hr>\r\n                </Form>\r\n\r\n                <br></br>\r\n                <Form className=\"container\">\r\n                    <Row className=\"g-2\">\r\n                        <Col md>\r\n                            <FloatingLabel controlId=\"floatingSelectGrid\" label=\"How Was The Service\">\r\n                                <Form.Select aria-label=\"Floating label select example\" value={service} onChange={handler1}>\r\n                                    <option value=\"0\">Choose Our Services</option>\r\n                                    <option value=\"0.20\">Excellent</option>\r\n                                    <option value=\"0.15\">Good</option>\r\n                                    <option value=\"0.10\">Not So Good</option>\r\n                                    <option value=\"0.05\">Bad</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                        </Col>\r\n                        <Col md>\r\n                            <FloatingLabel controlId=\"floatingInputGrid\" label=\"Customer Name\">\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Your Name\" onChange={handler2} />\r\n                            </FloatingLabel>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </Col>\r\n\r\n                        <div className=\"container d-flex justify-content-center\">\r\n                            <Button variant=\"warning\" style={{ width: \"250px\", fontWeight: \"600\" }} onClick={getData}>Add Customer</Button>\r\n                        </div>\r\n                    </Row>\r\n                    <br></br>\r\n                    <hr style={{ color: \"black\" }}></hr>\r\n\r\n                    <div className=\"container\">\r\n                    <Card.Header style={{ textAlign: \"center\", fontSize: \"30px\", fontFamily: \"Times New Roman', Times, serif\", fontWeight: \"bolder\" }}>Customer List</Card.Header>\r\n                    <br></br>\r\n\r\n                {\r\n                    props.customername.map(ele => (\r\n                    <Alert variant=\"info\">\r\n                    <Alert.Heading>{ele}</Alert.Heading>\r\n                    \r\n                    </Alert>\r\n                ))\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n                <br></br>\r\n                <hr style={{ color: \"black\" }}></hr>\r\n                <br></br>\r\n\r\n            </div>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <Button variant=\"warning\" style={{ width: \"250px\", fontWeight: \"600\" }} onClick={getData1} >Calculate Tip & Customer</Button>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"container\">\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr style={{ textAlign: \"center\" }}>\r\n\r\n                            <th>Total Customer</th>\r\n                            <th>Total Tip</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{ textAlign: \"center\" }}>\r\n                        {\r\n                            <tr>\r\n\r\n                                <td>{totalCustomer}</td>\r\n\r\n\r\n                                <td>\r\n                                    Rs.{tip1}\r\n                                </td>\r\n\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputOutput\r\n\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Footer from './Components/Footer';\nimport Header from './Components/Header';\nimport InputOutput from './Components/InputOutput';\n  \nfunction App() {\n\n  const [customername,setCustomerName]= useState([\n\n    \n  ])\n  const [totaltip, setTip] = useState([ \n    0\n  ])\n\n    const AddCustomerName=(link)=>{\n      setCustomerName([...customername,link])\n    }\n\n    const AddTip=(link)=>{\n      setTip([...totaltip,link])\n    }\n\n  return (\n    <>\n    <Header/>\n    <InputOutput customername={customername} AddCustomerName={AddCustomerName} totaltip={totaltip} AddTip={AddTip}/>\n    <Footer/>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}